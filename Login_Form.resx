<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>